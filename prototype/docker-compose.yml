version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: telecheck_postgres
    environment:
      POSTGRES_DB: telecheck
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - telecheck_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: telecheck_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - telecheck_network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telecheck_app
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: telecheck
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - telecheck_network

  # Test Database
  postgres_test:
    image: postgres:15-alpine
    container_name: telecheck_postgres_test
    environment:
      POSTGRES_DB: telecheck_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - telecheck_network

  # Test Redis
  redis_test:
    image: redis:7-alpine
    container_name: telecheck_redis_test
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes --save 60 1
    networks:
      - telecheck_network

  # Development with hot reload
  app_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: telecheck_app_dev
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: telecheck
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 3000
    ports:
      - "3001:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - telecheck_network
    command: npm run dev

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:

networks:
  telecheck_network:
    driver: bridge
